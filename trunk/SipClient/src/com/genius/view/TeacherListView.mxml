<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- This class uses the Employee.as class included in the same samples folder -->
	<fx:Script>
		<![CDATA[
			import com.genius.core.DataManager;
			import com.genius.model.ApplicationModel;
			import com.genius.model.SQLQueries;
			import com.genius.view.EditTeacherPopUp;
			
			import flexunit.framework.Protectable;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			protected var sipDb:SQLConnection;
			public var editTeacherPopup:EditTeacherPopUp;
			
			public var addTeacherPopup:AddNewTeacherPopUp;
			
			[Bindable]
			private static var model:ApplicationModel = ApplicationModel.instance;
			
			
			protected function onEditTeacherBtnClick(event:MouseEvent):void
			{
				var selectedTeacherId:String = dg.selectedItem.id;
				model.selectedTeacher = DataManager.getTeacherForId(selectedTeacherId);
			
				editTeacherPopup = EditTeacherPopUp(PopUpManager.createPopUp(this, EditTeacherPopUp, false));
				editTeacherPopup["saveBtn"].addEventListener("click", updateListAfterSave); 
			}
			
			private function updateListAfterSave(event:Event):void
			{
				model.teacherList = DataManager.getTeacherList();
			}
			protected function onAddTeacherBtnClick(event:MouseEvent):void 
			{
				addTeacherPopup = AddNewTeacherPopUp(PopUpManager.createPopUp(this, AddNewTeacherPopUp, false));
				
				// Set the event listeners for the StudentSearchPopUp component. on Search Button
				addTeacherPopup["btnAddTeacher"].addEventListener("click", updateTeacherList); 
			}
			
			private function updateTeacherList(event:Event):void
			{
				model.teacherList = DataManager.getTeacherList();
			}
			
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingTop="8" paddingLeft="8" paddingRight="8" paddingBottom="8"/>
	</s:layout>
	<s:VGroup width="501" height="476">
		<s:Label x="10" y="10" text="Teacher List" styleName="appFontBold" />
				<mx:DataGrid id="dg" dataProvider="{model.teacherList}" width="680" rowCount="20" height="400">
			<mx:columns>
				<mx:DataGridColumn dataField="id" headerText="Teacher ID" width="80" resizable="false" textAlign="left"/>
				<mx:DataGridColumn dataField="teachername" headerText="Teacher Name" />
				<mx:DataGridColumn dataField="dob" headerText="Date of Birth" />
				<mx:DataGridColumn dataField="qualification" headerText="Qualification" />
				<mx:DataGridColumn dataField="address" headerText="Address" />
				<mx:DataGridColumn dataField="experience" headerText="Experience" />
				<mx:DataGridColumn dataField="mobile" headerText="Contact Number" />
			</mx:columns>
		</mx:DataGrid>
		<s:Button left="10" label="Edit Teacher" height="40" click="onEditTeacherBtnClick(event)" enabled="{dg.selectedIndex > -1}"/>
		<s:HGroup paddingTop="50">
			<s:Button label="Add Teacher" height="40" click="onAddTeacherBtnClick(event)" />
		</s:HGroup>
	</s:VGroup>
</s:Group>
