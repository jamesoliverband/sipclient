<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<!-- This class uses the Employee.as class included in the same samples folder -->
	<fx:Script>
		<![CDATA[
			import com.genius.core.DataManager;
			import com.genius.model.ApplicationModel;
			import com.genius.model.SQLQueries;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			public var addCoursePopUp:AddNewCoursePopUp;
			
			protected var sipDb:SQLConnection;
			
			public var editCoursePopup:EditCoursePopUp;
			
			
			[Bindable]
			private static var model:ApplicationModel = ApplicationModel.instance;
			
			
			protected function onEditBtnClick(event:MouseEvent):void
			{
				var selectedCourseId:String = dg.selectedItem.id;
				model.selectedCourse = DataManager.getCourseForId(selectedCourseId);
				
				editCoursePopup = EditCoursePopUp(PopUpManager.createPopUp(this, EditCoursePopUp, false));
				editCoursePopup["saveBtn"].addEventListener("click", updateListAfterSave); 
			}
			
			private function updateListAfterSave(event:Event):void
			{
				model.courseList = DataManager.getCourseList();
			
			}
			
			protected function onAddTeacherBtnClick(event:MouseEvent):void 
			{
				addCoursePopUp = AddNewCoursePopUp(PopUpManager.createPopUp(this, AddNewCoursePopUp, false));
				
				// Set the event listeners for the StudentSearchPopUp component. on Search Button
				addCoursePopUp["btnAddCourse"].addEventListener("click", updateCourseList); 
			}
			
			private function updateCourseList(event:Event):void
			{
				model.courseList = DataManager.getCourseList();
			}
			
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingTop="8" paddingLeft="8" paddingRight="8" paddingBottom="8"/>
	</s:layout>
	<s:VGroup width="501" height="476">
		<s:Label x="10" y="10" text="Course List" styleName="appFontBold" />
		
		<mx:DataGrid id="dg" dataProvider="{model.courseList}" width="600" rowCount="20" height="400">
			<mx:columns>
				<mx:DataGridColumn dataField="id" headerText="Course ID" width="100"/>
				<mx:DataGridColumn dataField="coursename" headerText="Course Name" width="200"/>
				<mx:DataGridColumn dataField="description" headerText="Description" />
			</mx:columns>
		</mx:DataGrid>
		<s:Button left="10" label="Edit Course" height="40" click="onEditBtnClick(event)" enabled="{dg.selectedIndex > -1}"/>
		<s:HGroup paddingTop="50">
			<s:Button height="40" label="Add Course" click="onAddTeacherBtnClick(event)" />
		</s:HGroup>
	</s:VGroup>
</s:Group>
