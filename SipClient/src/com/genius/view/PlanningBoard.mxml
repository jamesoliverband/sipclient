<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" left="10">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.genius.core.DataManager;
			import com.genius.model.ApplicationModel;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private static var model:ApplicationModel = ApplicationModel.instance;
			
		[Bindable]
		public var countList:ArrayCollection = new ArrayCollection([
		{Month:"Jan", plan:2, actual:2, leve1plan:4},
		{Month:"Feb", plan:4, actual:1, leve1plan:4},
		{Month:"Mar", plan:6, actual:5, leve1plan:4},
		{Month:"Apr", plan:8, actual:2, leve1plan:4},
		{Month:"May", plan:3, actual:7, leve1plan:4},
		{Month:"Jun", plan:2, actual:2, leve1plan:4},
		{Month:"Jul", plan:6, actual:9, leve1plan:4},
		{Month:"Aug", plan:9, actual:6, leve1plan:4},
		{Month:"Sep", plan:5, actual:3, leve1plan:4},
		{Month:"Oct", plan:3, actual:9, leve1plan:4},
		{Month:"Nov", plan:4, actual:2, leve1plan:4},
		{Month:"Dec", plan:5, actual:3, leve1plan:4}
		]);
			[Bindable]
			private var viewList:ArrayCollection;
				
			protected function onGoBtnClick(event:MouseEvent):void {
				viewList = DataManager.getUpdatedReportView(cmbYear.text, cmbLevel.text);
				
				
			}
			
			//Returns the list of year to display in year combo box.
			
			private function getYearList():ArrayCollection{
				var yearList:ArrayCollection = new ArrayCollection;
				var currentTime:Date;
				currentTime = new Date();
				var i: int;
				var year:Number;
				year = currentTime.fullYear;
				year = year - 2;
				for (i=0; i < 5; i++) {
					yearList.addItem(year++);
				}
				return yearList;
			}
			
			private function getLevelList():ArrayCollection {
				var levelList:ArrayCollection = new ArrayCollection;
				var i:int;
				levelList.addItem("All");
				for (i=0; i < model.courseList.length; i++) {
					levelList.addItem(model.courseList.getItemAt(i,0));
				}
				return levelList;
			}
			
			
		]]>
		
		
		
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout >
		</s:VerticalLayout>
	</s:layout>
	
	<s:HGroup paddingTop="20" paddingBottom="10" paddingLeft="20" gap="30">
		<mx:FormItem label="Year:">
			<mx:ComboBox id="cmbYear"  dataProvider="{getYearList()}" selectedIndex="2" height="35"/> 
		</mx:FormItem>
		
		<mx:FormItem label="Level:">
			<mx:ComboBox id="cmbLevel" dataProvider="{model.courseList}" labelField="coursename" height="35" /> 
		</mx:FormItem>
		
		<mx:FormItem>
			<s:Button id="goBtn" label="Go" height="35" click="onGoBtnClick(event)"/>
		</mx:FormItem>
		
	</s:HGroup>
	
	
	<s:HGroup paddingTop="5">
		<mx:ColumnChart id="myChart" 
					  dataProvider="{viewList}" 
					  showDataTips="true" width="583" height="200" 
					  >
			<mx:horizontalAxis>
				<mx:CategoryAxis 
					dataProvider="{viewList}" 
					
					categoryField="month"
					/>
			</mx:horizontalAxis>
			<mx:series>
				<mx:ColumnSeries  
					yField="actual" 
					displayName="Actual" 
					/>
				
				<mx:ColumnSeries 
					yField="plan" 
					displayName="Plan"
					>
					<!--
					
					<mx:barStroke>
						<mx:Stroke 
							color="0xE01BB9" 
							weight="4" 
							alpha=".4"
							/>
						
					</mx:barStroke>
					-->
				</mx:ColumnSeries>
			</mx:series>
		</mx:ColumnChart>
		<mx:Legend dataProvider="{myChart}"/>
	</s:HGroup>
	
	
	
	<mx:DataGrid id="dg" dataProvider="{model.monthlyCounts}" width="620" rowCount="20" height="300">
		<mx:columns>
			<mx:DataGridColumn dataField="month" headerText="Month"/>
			<mx:DataGridColumn dataField="year" headerText="Year"/>
			<mx:DataGridColumn dataField="level" headerText="level" />
			<mx:DataGridColumn dataField="plan" headerText="plan"/>
			<mx:DataGridColumn dataField="actual" headerText="Actual"/>
		</mx:columns>
	</mx:DataGrid>
	
</s:Group>
